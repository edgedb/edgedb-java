import java.nio.file.Paths

dependencies {
    api "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    api "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    api 'org.jetbrains:annotations:23.1.0'
    
    implementation "org.slf4j:slf4j-api:$slf4j_version"

    implementation 'io.netty:netty-buffer'
    implementation 'io.netty:netty-codec'
    implementation 'io.netty:netty-common'
    implementation 'io.netty:netty-transport'
    implementation 'io.netty:netty-handler'

    implementation "org.jooq:joou:$joou_version"
    implementation "org.reflections:reflections:$reflections_version"
    
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation 'org.burningwave:core:12.62.6'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_databind_version'
    testImplementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation "ch.qos.logback:logback-core:$logback_version"
}

jar {
    manifest {
        attributes 'Implementation-Title': archivesBaseName,
                'Implementation-Version': archiveVersion,
                'Automatic-Module-Name': 'com.edgedb.driver'
    }
}

tasks.register('copyJarToBin') {
    copy {
        from jar
        into Paths.get(project.rootDir.toString(), 'examples', 'scala-examples', 'lib')
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.name

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'EdgeDB Java'
                description = 'A JVM-based binding for the EdgeDB database'
                url = 'https://github.com/edgedb/edgedb-java'
                organization {
                    name = 'EdgeDB'
                    url = 'https://edgedb.com'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/edgedb/edgedb-java/issues'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/edgedb/edgedb-java'
                    connection = 'scm:git:git://github.com/edgedb/edgedb-java.git'
                    developerConnection = 'scm:git:ssh://git@github.com:edgedb/edgedb-java.git'
                }
                developers {
                    developer {
                        name = 'MagicStack Inc. and the EdgeDB authors'
                    }
                }
            }
        }
    }
}