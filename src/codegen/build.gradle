plugins {
    id 'java'
    id 'org.gradlex.extra-java-module-info' version '1.4'
}

dependencies {
    implementation 'commons-cli:commons-cli:1.5.0'
    api "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    implementation 'ch.qos.logback:logback-core:1.4.5'

    implementation project(path: ':src:driver')
    implementation 'com.squareup:javapoet:1.13.0'
    implementation "org.slf4j:slf4j-api:$slf4j_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

extraJavaModuleInfo {
    module("commons-cli:commons-cli", "org.apache.commons.cli") {
        exports("org.apache.commons.cli")
    }

    failOnMissingModuleInfo.set(false)
}

tasks.register('publish-jar') {
    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        manifest {
            attributes 'Main-Class': 'com.edgedb.codegen.Main'
        }

        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }

    dependsOn(jar)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.name

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'EdgeDB Java Codegen'
                description = 'A CLI tool for generating java source files from EdgeDB'
                url = 'https://github.com/edgedb/edgedb-java'
                organization {
                    name = 'EdgeDB'
                    url = 'https://edgedb.com'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/edgedb/edgedb-java/issues'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/edgedb/edgedb-java'
                    connection = 'scm:git:git://github.com/edgedb/edgedb-java.git'
                    developerConnection = 'scm:git:ssh://git@github.com:edgedb/edgedb-java.git'
                }
                developers {
                    developer {
                        name = 'MagicStack Inc. and the EdgeDB authors'
                    }
                }
            }
        }
    }
}

if (isRelease) {
    signing {
        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        if (signingKey != null && signingPassword != null) {
            useInMemoryPgpKeys(new String(signingKey.decodeBase64()), signingPassword as String)
        }
        sign publishing.publications.mavenJava
    }
}